#!python
import subprocess
import argparse

from git_removed_branches.mail import (
    find_remote_branches,
    find_local_branches,
    find_live_branches,
    analyze_live_and_remote,
    find_to_remove,
    delete_branches
)

parser = argparse.ArgumentParser(description="Remove local branches, which are no longer available in the remote")
parser.add_argument("--prune", action="store_true", help="Remove branches")
parser.add_argument("--force", action="store_true", help="Force deletion")
parser.add_argument("--remote", default="origin", help="Remote name")
args = parser.parse_args()

# test whether this is a git repo
try:
    subprocess.check_output(["git", "rev-parse", "--show-toplevel"])
except subprocess.CalledProcessError:
    pass
else:
    # walk through the local branches if local branch is not in remote branch list prepare for removing
    remote = args.remote
    remote_branches = find_remote_branches(remote)
    local_branches = find_local_branches(remote)
    live_branches = find_live_branches(remote)
    remote_branches = analyze_live_and_remote(live_branches, remote_branches)

to_remove = find_to_remove(local=local_branches, remote=remote_branches)
delete_branches(to_remove, args.prune, args.force)
